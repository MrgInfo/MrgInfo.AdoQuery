# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema

parameters:
- name: buildImages
  type: boolean
  default: false

name: $(Date:yyyyMMdd)$(Rev:.r)

resources:
  containers:
  - container: ora
    image: mrginfocontainerregistry.azurecr.io/ado-query/ora
    endpoint: AzureContainers
    options: --health-start-period=5m 
    ports:
    - '1521:1521'
  - container: sql
    image: mrginfocontainerregistry.azurecr.io/ado-query/sql
    endpoint: AzureContainers
    options: --health-start-period=5m
    ports:
    - '1433:1433'

variables:
  packageVersion: 1.0.0

trigger:
- master

jobs:
- job: images
  displayName: Build Docker images
  condition: and(always(), eq('${{ parameters.buildImages }}', true))
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: AzureContainers
  - task: Docker@2
    displayName: Login to Docker Hub
    inputs:
      command: login
      containerRegistry: DockerHub
  - task: Docker@2
    displayName: Build Oracle images
    inputs:
      command: buildAndPush
      containerRegistry: AzureContainers
      repository: ado-query/ora
      Dockerfile: '**/MrgInfo.AdoQuery.Oracle/Dockerfile'
      tags: |
          $(Build.BuildId)
          latest
  - task: Docker@2
    displayName: Build SQL images
    inputs:
      command: buildAndPush
      containerRegistry: AzureContainers
      repository: ado-query/sql
      Dockerfile: '**/MrgInfo.AdoQuery.Oracle/Dockerfile'
      tags: |
          $(Build.BuildId)
          latest

- job: packages
  displayName: Build and test NuGet packages
  dependsOn: images
  pool:
    vmImage: ubuntu-latest
  services:
    ora: ora
    sql: sql
  steps:
  - pwsh: Start-Sleep -s (5*60)
    displayName: Wait for database servers to boot
  - script: 'sqlcmd -S localhost,1433 -U AdoQuery -P AdoQuery -Q "SELECT * FROM Product"'
    displayName: Connect to SQL Server.
  - task: DotNetCoreCLI@2
    displayName: Run unit tests
    inputs:
      command: test
      projects: '**/MrgInfo.AdoQuery.Test.csproj'
      verbosityPack: detailed
  - task: DotNetCoreCLI@2
    displayName: Create package
    inputs:
      command: pack
      packagesToPack: '**/MrgInfo.AdoQuery.Core.csproj;**/MrgInfo.AdoQuery.Sql.csproj;**/MrgInfo.AdoQuery.Oracle.csproj'
      versioningScheme: byEnvVar
      versionEnvVar: packageVersion
      verbosityPack: detailed
  - task: NuGetCommand@2
    displayName: Push to nuget.org
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: external
      publishFeedCredentials: NuGet
