<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MrgInfo.AdoQuery.Core</name>
    </assembly>
    <members>
        <member name="T:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider">
            <inheritdoc cref="T:MrgInfo.AdoQuery.Core.FakeQueryProvider" />
            <summary>
                Fake data provider by unique identifier.
            </summary>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider.FindFakeData(System.String,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider.Register``1(``0,System.Collections.Generic.IReadOnlyList{System.Object}[])">
            <summary>
                Register fake data for a query.
            </summary>
            <param name="id">
                Unique identifier of the query.
            </param>
            <param name="data">
                Fake result set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="data"/> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider.Register``1(System.String,``0,System.Collections.Generic.IReadOnlyList{System.Object}[])">
            <summary>
                Register fake data for a given query.
            </summary>
            <param name="member">
                Caller context of the query.
            </param>
            <param name="id">
                Unique identifier of the query.
            </param>
            <param name="data">
                Fake result set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="member"/> or <paramref name="data"/> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider.Item(System.String)">
            <summary>
                Register fake data for a given query.
            </summary>
            <param name="id">
                Unique identifier of the query.
            </param>
            <value>
                Fake result set.
            </value>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="id"/> or <paramref name="value"/> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider.Item(System.String,System.String)">
            <summary>
                Register fake data for a given query.
            </summary>
            <param name="member">
                Caller context of the query.
            </param>
            <param name="id">
                Unique identifier of the query.
            </param>
            <value>
                Fake result set.
            </value>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="member"/> or <paramref name="id"/> or <paramref name="value"/> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByIdFakeQueryProvider.Clear">
            <summary>
                Clear registered data.
            </summary>
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.ByPatternFakeQueryProvider">
            <inheritdoc cref="T:MrgInfo.AdoQuery.Core.FakeQueryProvider" />
            <summary>
                Fake data provider by regular expression query matching.
            </summary>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByPatternFakeQueryProvider.FindFakeData(System.String,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByPatternFakeQueryProvider.Register(System.Text.RegularExpressions.Regex,System.Collections.Generic.IReadOnlyList{System.Object}[])">
            <summary>
                Register fake data for a query.
            </summary>
            <param name="pattern">
                Regular expression for selecting query.
            </param>
            <param name="data">
                Fake result set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="pattern"/> or <paramref name="data"/> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByPatternFakeQueryProvider.Register(System.String,System.Collections.Generic.IReadOnlyList{System.Object}[])">
            <summary>
                Register fake data for a query.
            </summary>
            <param name="pattern">
                Regular expression for selecting query.
            </param>
            <param name="data">
                Fake result set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="pattern"/> or <paramref name="data"/> argument has <c>null</c> value.
            </exception>
            <exception cref="T:System.ArgumentException">
                A regular expression parsing error occurred.
            </exception>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.ByPatternFakeQueryProvider.Item(System.String)">
            <summary>
                Register fake data for a given query.
            </summary>
            <param name="pattern">
                Unique identifier of the query.
            </param>
            <value>
                Fake result set.
            </value>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="pattern"/> or <paramref name="value"/> argument has <c>null</c> value.
            </exception>
            <exception cref="T:System.ArgumentException">
                A regular expression parsing error occurred.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.ByPatternFakeQueryProvider.Clear">
            <summary>
                Clear registered data.
            </summary>
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.DbQueryProvider">
            <summary>
                Run SQL queries on database.
            </summary>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.GetParameterNumber(System.Int32)">
            <summary>
                Format parameter indexing.
            </summary>
            <param name="index">
                Index of parameter.
            </param>
            <returns>
                Formatted parameter index.
            </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
                The <paramref name="index" /> is invalid.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.CreateConnection">
            <summary>
                Create nem database connection.
            </summary>
            <returns>
                New connection.
            </returns>
            <exception cref="T:System.Data.Common.DbException">
                Cannot connect to database.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.CreateParameterName(System.Int32)">
            <summary>
                Unique name for query parameter.
            </summary>
            <param name="index">
                Index of parameter.
            </param>
            <returns>
                Unique name of parameter.
            </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
                The <paramref name="index" /> is invalid.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.Query(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.QueryAsync(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.Read``1(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.DbQueryProvider.ReadAsync``1(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.FakeQueryProvider">
            <inheritdoc cref="T:MrgInfo.AdoQuery.Core.QueryProvider" />
            <summary>
                Fake data query provider.
            </summary>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.RegisterQuery(System.String,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                TODO Lekérdezés hamisítás regisztrációja.
            </summary>
            <param name="id">
                TODO Az <c>SQL</c> lekérdezés egyedi azonosítója.
            </param>
            <param name="sql">
                TODO Az <c>SQL</c> lekérdezés.
            </param>
            <param name="args">
                TODO Az <c>SQL</c> lekérdezés paraméterei.
            </param>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.FindFakeData(System.String,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                TODO A hamisított eredmény kikeresése.
            </summary>
            <param name="id">
                TODO Az <c>SQL</c> lekérdezés egyedi azonosítója.
            </param>
            <param name="query">
                TODO Az <c>SQL</c> lekérdezés.
            </param>
            <param name="args">
                TODO Az <c>SQL</c> lekérdezés paraméterei.
            </param>
            <returns>
                TODO A hamisított adatok sor-oszlop indexeléssel.
            </returns>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.Query(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.QueryAsync(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
            <remarks>
                No real async.
            </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.Read``1(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.ReadAsync``1(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Threading.CancellationToken)">
            <inheritdoc />
            <remarks>
                No real async.
            </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.SaveAllQueries(System.IO.TextWriter)">
            <summary>
                TODO Összegyűjtött lekérdezése mentése.
            </summary>
            <param name="writer">
                TODO A kiírt adatfolyam.
            </param>
            <exception cref="T:System.ArgumentNullException">
                TODO A <paramref name="writer"/> értéke <c>null</c>.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.SaveAllQueries(System.String)">
            <summary>
                TODO Összegyűjtött lekérdezése mentése.
            </summary>
            <param name="fileName">
                TODO A fájl neve.
            </param>
            <exception cref="T:System.ArgumentNullException">
                TODO A <paramref name="fileName"/> értéke <c>null</c>.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FakeQueryProvider.ToString">
            <inheritdoc />
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.FormattableStringExtensions">
            <summary>
                Assigning unique identifier for a query.
            </summary>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FormattableStringExtensions.IdFor``1(``0,System.FormattableString)">
            <summary>
                Adding universal unique identifier for query.
            </summary>
            <param name="id">
                Unique identifier for query.
            </param>
            <param name="query">
                The query.
            </param>
            <returns>
                The query with identifier.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="query"/> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.FormattableStringExtensions.LocalIdFor``1(``0,System.FormattableString,System.String)">
            <summary>
                Adding unique identifier for query within caller context.
            </summary>
            <param name="id">
                Unique identifier for query.
            </param>
            <param name="query">
                The query.
            </param>
            <param name="memberName">
                The caller member.
            </param>
            <returns>
                The query with identifier.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="query" /> or <paramref name="memberName" /> argument has <c>null</c> value.
            </exception>
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.QueriesCollection">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueriesCollection.#ctor">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueriesCollection.#ctor(System.Collections.Generic.IEnumerable{MrgInfo.AdoQuery.Core.Query})">
            <inheritdoc />
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.Query">
            <summary>
                Egy <c>SQL</c> lekérdezés futtatási körülményeit leíró osztály.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.Query.IdMapper">
            <summary>
                Az delegált segítségével határozhatjuk meg, hogyan cseréljük a fiktív
                adatbázis azonosítókat valós azonosítókra.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.Query.Id">
            <summary>
                Unique identifier.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.Query.Caller">
            <summary>
                Caller method.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.Query.Command">
            <summary>
                The query command.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.Query.Parameters">
            <summary>
                Query parameters.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.Query.QueryParameters">
            <summary>
                Serializing query parameters.
            </summary>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="value"/> has <c>null</c> value.
            </exception>
            <exception cref="T:System.FormatException">
                Invalid format.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.Query.Run(MrgInfo.AdoQuery.Core.DbQueryProvider)">
            <summary>
                Run query.
            </summary>
            <param name="provider">
                Query provider.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="provider"/> argument has <c>null</c> value.
            </exception>
            <exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
                Error occured during executing the query.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.Query.RunAsync(MrgInfo.AdoQuery.Core.DbQueryProvider,System.Threading.CancellationToken)">
            <summary>
                Run query asynchronously.
            </summary>
            <param name="provider">
                Query provider.
            </param>
            <param name="token">
                The cancellation token that will be checked for stop reading.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="provider"/> argument has <c>null</c> value.
            </exception>
            <exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
                Error occured during executing the query.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.Query.RunCount(MrgInfo.AdoQuery.Core.DbQueryProvider)">
            <summary>
                Run query and count records.
            </summary>
            <param name="provider">
                Query provider.
            </param>
            <returns>
                Record count.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="provider"/> argument has <c>null</c> value.
            </exception>
            <exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
                Error occured during executing the query.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.Query.RunCountAsync(MrgInfo.AdoQuery.Core.DbQueryProvider,System.Threading.CancellationToken)">
            <summary>
                Run query asynchronously.
            </summary>
            <param name="provider">
                Query provider.
            </param>
            <param name="token">
                The cancellation token that will be checked for stop reading.
            </param>
            <exception cref="T:System.ArgumentNullException">
                The <paramref name="provider"/> argument has <c>null</c> value.
            </exception>
            <exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
                Error occured during executing the query.
            </exception>
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.QueryDbException">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryDbException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryDbException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryDbException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.QueryParameter">
            <summary>
                Serializing query parameters.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.QueryParameter.TypeName">
            <summary>
                Type of parameter.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.QueryParameter.Value">
            <summary>
                Value of parameter.
            </summary>
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.QueryProvider">
            <summary>
                Run SQL queries.
            </summary>
        </member>
        <member name="T:MrgInfo.AdoQuery.Core.QueryProvider.Parameter">
            <inheritdoc />
            <summary>
                Query parameter.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.QueryProvider.Parameter.Name">
            <summary>
                Name of parameter.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.QueryProvider.Parameter.Value">
            <summary>
                Value of parameter.
            </summary>
        </member>
        <member name="P:MrgInfo.AdoQuery.Core.QueryProvider.Parameter.Present">
            <summary>
                Present in query?
            </summary>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Parameter.ToString">
            <inheritdoc />
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Parameter.ToString(System.String,System.IFormatProvider)">
            <inheritdoc />
            <exception cref="T:System.FormatException">
                Invalid format!
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.RemoveTrailing(System.String)">
            <summary>
                TODO Törli a behúzást a | karakterig minden sorban.
            </summary>
            <param name="query">
                TODO Az SQL lekérdezés.
            </param>
            <returns>
                TODO Az átformázott lekérdezés.
            </returns>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Cast``1(System.Object)">
            <summary>
                TODO Objektum típuskényszerítése, amennyiben lehetséges.
            </summary>
            <typeparam name="TResult">
                TODO A kényszerített típus.
            </typeparam>
            <param name="value">
                TODO Az objektum.
            </param>
            <returns>
                TODO Az új típusú objektum, ha <paramref name="value"/> null referenciák, akkor a
                típus alapértelmezett értéke.
            </returns>
            <exception cref="T:System.InvalidCastException">
                TODO Ha nem lehetséges az adott erős típuskényszerítés.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Int32)">
            <summary>
                Run query synchronously.
            </summary>
            <param name="id">
                The unique identifier of query.
            </param>
            <param name="query">
                The query command.
            </param>
            <param name="parameters">
                Query parameters.
            </param>
            <param name="columns">
                Number of column is result set.
            </param>
            <returns>
                Result set.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                Invalid number of columns in <paramref name="columns"/>.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``1(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``2(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``3(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``4(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``5(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``6(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``7(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``8(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``9(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``10(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``11(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``12(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``13(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``14(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <typeparam name="T14">
      Type of column 14.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``15(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <typeparam name="T14">
      Type of column 14.
    </typeparam>
            <typeparam name="T15">
      Type of column 15.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Query``16(System.FormattableString)">
            <summary>
      Run query synchronously.
    </summary><param name="query">
      The query command.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      The <paramref name="query" /> argument has <c>null</c> value.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <typeparam name="T14">
      Type of column 14.
    </typeparam>
            <typeparam name="T15">
      Type of column 15.
    </typeparam>
            <typeparam name="T16">
      Type of column 16.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Int32,System.Threading.CancellationToken)">
            <summary>
                Run query asynchronously.
            </summary>
            <param name="id">
                The unique identifier of query.
            </param>
            <param name="query">
                The query command.
            </param>
            <param name="parameters">
                Query parameters.
            </param>
            <param name="columns">
                Number of column is result set.
            </param>
            <param name="token">
                The cancellation token that will be checked for stop reading.
            </param>
            <returns>
                Result set.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                Invalid number of columns in <paramref name="columns"/>.
            </exception>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``1(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``2(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``3(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``4(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``5(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``9(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``10(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``11(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``12(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``13(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``14(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <typeparam name="T14">
      Type of column 14.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``15(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <typeparam name="T14">
      Type of column 14.
    </typeparam>
            <typeparam name="T15">
      Type of column 15.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.QueryAsync``16(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
      Run query asynchronously.
    </summary><param name="query">
      The query command.
    </param><param name="token">
      The cancellation token that will be checked for stop reading.
    </param><returns>
      Result set.
    </returns><exception cref="T:System.ArgumentNullException">
      Parameter <paramref name="query" /> is <c>null</c>.
    </exception><exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
      Error occured during executing the query.
    </exception>
            <typeparam name="T1">
      Type of column 1.
    </typeparam>
            <typeparam name="T2">
      Type of column 2.
    </typeparam>
            <typeparam name="T3">
      Type of column 3.
    </typeparam>
            <typeparam name="T4">
      Type of column 4.
    </typeparam>
            <typeparam name="T5">
      Type of column 5.
    </typeparam>
            <typeparam name="T6">
      Type of column 6.
    </typeparam>
            <typeparam name="T7">
      Type of column 7.
    </typeparam>
            <typeparam name="T8">
      Type of column 8.
    </typeparam>
            <typeparam name="T9">
      Type of column 9.
    </typeparam>
            <typeparam name="T10">
      Type of column 10.
    </typeparam>
            <typeparam name="T11">
      Type of column 11.
    </typeparam>
            <typeparam name="T12">
      Type of column 12.
    </typeparam>
            <typeparam name="T13">
      Type of column 13.
    </typeparam>
            <typeparam name="T14">
      Type of column 14.
    </typeparam>
            <typeparam name="T15">
      Type of column 15.
    </typeparam>
            <typeparam name="T16">
      Type of column 16.
    </typeparam>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Read``1(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
                Run query synchronously with scalar result.
            </summary>
            <typeparam name="TResult">
                Type of result.
            </typeparam>
            <param name="id">
                The unique identifier of query.
            </param>
            <param name="query">
                The query command.
            </param>
            <param name="parameters">
                Query parameters.
            </param>
            <returns>
                Scalar value.
            </returns>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.Read``1(System.FormattableString)">
            <summary>
                Run query synchronously with scalar result.
            </summary>
            <typeparam name="TResult">
                Type of result.
            </typeparam>
            <param name="query">
                The query command.
            </param>
            <returns>
                Scalar value.
            </returns>
            <exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
                Error occured during executing the query.
            </exception>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.ReadAsync``1(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Object},System.Threading.CancellationToken)">
            <summary>
                Run query asynchronously with scalar result.
            </summary>
            <typeparam name="TResult">
                Type of result.
            </typeparam>
            <param name="id">
                The unique identifier of query.
            </param>
            <param name="query">
                The query command.
            </param>
            <param name="parameters">
                Query parameters.
            </param>
            <param name="token">
                The cancellation token that will be checked for stop reading.
            </param>
            <returns>
                Scalar value.
            </returns>
        </member>
        <member name="M:MrgInfo.AdoQuery.Core.QueryProvider.ReadAsync``1(System.FormattableString,System.Threading.CancellationToken)">
            <summary>
                Run query asynchronously with scalar result.
            </summary>
            <typeparam name="TResult">
                Type of result.
            </typeparam>
            <param name="query">
                The query command.
            </param>
            <param name="token">
               The cancellation token that will be checked for stop reading.
            </param>
            <returns>
                Scalar value.
            </returns>
            <exception cref="T:MrgInfo.AdoQuery.Core.QueryDbException">
                Error occured during executing the query.
            </exception>
            <remarks>
      The following format strings can be used in <paramref name="query" />:
      <list type="table">
        <listheader>
          <term>Format specifier</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>==</term>
          <description>
            Equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>!=</term>
          <description>
            Not equals (works for NULLs).
          </description>
        </item>
        <item>
          <term>=*</term>
          Match start of string.
        </item>
        <item>
          <term>*=</term>
          Match end of string.
        </item>
        <item>
          <term>*=*</term>
          Match containing in string.
        </item>
      </list>
    </remarks>
        </member>
    </members>
</doc>
